package com.b7f2.ws.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2018-07-27T13:20:45.209+02:00
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "ImplLoginService", 
                  wsdlLocation = "https://www.czidconnect.es:8443/messenger/services/ImplLogin?wsdl",
                  targetNamespace = "http://service.ws.b7f2.com") 
public class ImplLoginService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.ws.b7f2.com", "ImplLoginService");
    public final static QName ImplLogin = new QName("http://service.ws.b7f2.com", "ImplLogin");
    static {
        URL url = null;
        try {
            url = new URL("https://www.czidconnect.es:8443/messenger/services/ImplLogin?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ImplLoginService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://www.czidconnect.es:8443/messenger/services/ImplLogin?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ImplLoginService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ImplLoginService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ImplLoginService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ImplLoginService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ImplLoginService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ImplLoginService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns ImplLogin
     */
    @WebEndpoint(name = "ImplLogin")
    public ImplLogin getImplLogin() {
        return super.getPort(ImplLogin, ImplLogin.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ImplLogin
     */
    @WebEndpoint(name = "ImplLogin")
    public ImplLogin getImplLogin(WebServiceFeature... features) {
        return super.getPort(ImplLogin, ImplLogin.class, features);
    }

}
